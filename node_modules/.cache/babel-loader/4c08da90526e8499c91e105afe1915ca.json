{"ast":null,"code":"var _jsxFileName = \"/home/f4ustx/cnpq/Portal_Geoeste/client/src/components/Graphic/Graphic.tsx\";\nimport { GeoJSON, MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\nimport { Section } from \"../Section/Section\";\nimport { Legend } from \"../Legend/Legend\";\nimport Reference from \"../References/Reference\";\nimport Download from \"../Button/DownloadFile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction style(feature) {\n  if (feature.properties.colors != null) {\n    return {\n      fillColor: feature.properties.colors,\n      fillOpacity: 1,\n      color: \"black\",\n      weight: .7\n    };\n  } else {\n    return {\n      fillColor: '#08a5ee',\n      fillOpacity: 0.3,\n      color: \"black\",\n      weight: 1\n    };\n  }\n}\n\nconst onEachFeature = (atr, layer) => {\n  const atr_n = atr.properties.atr;\n  const atr_nome = atr.properties.nome + \": \" + String(atr.properties.atr);\n\n  if (atr_n != null) {\n    layer.on('mouseover', function e() {\n      if (atr.properties.nome === undefined) layer.bindPopup(atr_n).openPopup();else layer.bindPopup(atr_nome).openPopup();\n    });\n  }\n};\n\nexport const Graphic = props => {\n  var _props$graphic, _props$graphic2, _props$graphic3, _props$graphic4, _props$graphic5;\n\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      height: \"100vh\",\n      \"width\": \"100%\"\n    },\n    zoom: 8,\n    center: [-24.8, -53.75],\n    id: \"mapId\",\n    attributionControl: false,\n    zoomControl: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n      data: JSON.parse(props.data),\n      style: style,\n      onEachFeature: onEachFeature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      id: (_props$graphic = props.graphic) === null || _props$graphic === void 0 ? void 0 : _props$graphic.map_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      info: (_props$graphic2 = props.graphic) === null || _props$graphic2 === void 0 ? void 0 : _props$graphic2.map_legs,\n      atr: (_props$graphic3 = props.graphic) === null || _props$graphic3 === void 0 ? void 0 : _props$graphic3.map_atr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Reference, {\n      info: (_props$graphic4 = props.graphic) === null || _props$graphic4 === void 0 ? void 0 : _props$graphic4.map_refs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ZoomControl, {\n      position: \"bottomright\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Download, {\n      param: (_props$graphic5 = props.graphic) === null || _props$graphic5 === void 0 ? void 0 : _props$graphic5.map_id,\n      p: '13.5'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n};\n_c = Graphic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphic\");","map":{"version":3,"names":["GeoJSON","MapContainer","TileLayer","ZoomControl","Section","Legend","Reference","Download","style","feature","properties","colors","fillColor","fillOpacity","color","weight","onEachFeature","atr","layer","atr_n","atr_nome","nome","String","on","e","undefined","bindPopup","openPopup","Graphic","props","height","JSON","parse","data","graphic","map_id","map_legs","map_atr","map_refs"],"sources":["/home/f4ustx/cnpq/Portal_Geoeste/client/src/components/Graphic/Graphic.tsx"],"sourcesContent":["import { GraphicProps } from \"../../interfaces\";\nimport { GeoJSON, MapContainer, TileLayer, ZoomControl } from \"react-leaflet\";\nimport { Section } from \"../Section/Section\";\nimport { Legend } from \"../Legend/Legend\";\nimport Reference from \"../References/Reference\";\nimport Download from \"../Button/DownloadFile\";\n\n\nfunction style(feature: any) {\n  \n    if (feature.properties.colors != null) {\n      return {\n        fillColor: feature.properties.colors,\n        fillOpacity: 1,\n        color: \"black\",\n        weight: .7\n      };\n    } else {\n      return {\n        fillColor: '#08a5ee',\n        fillOpacity: 0.3,\n        color: \"black\",\n        weight: 1\n      };\n    }\n  }\n\n  const onEachFeature = (atr: any, layer: any) => {\n    const atr_n = atr.properties.atr;\n    const atr_nome = atr.properties.nome + \": \" + String(atr.properties.atr);\n\n    if(atr_n != null){\n    layer.on('mouseover', function e() {\n      if(atr.properties.nome === undefined)\n        layer.bindPopup(atr_n).openPopup();\n      else\n        layer.bindPopup(atr_nome).openPopup();\n    })\n  }\n  };\n\n  export const Graphic: React.FC<GraphicProps> = (props) => {\n    return(\n            <MapContainer style={{ height: \"100vh\", \"width\":\"100%\" }} zoom={8} center={[-24.8, -53.75]} id=\"mapId\" attributionControl={false} zoomControl={false} >\n            <TileLayer url=\"https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png\" />\n            <GeoJSON data={JSON.parse(props.data)} style={style} onEachFeature={onEachFeature} />\n            <Section id={props.graphic?.map_id}/>\n            <Legend info={props.graphic?.map_legs} atr={props.graphic?.map_atr} />\n            <Reference info={props.graphic?.map_refs}/>\n            <ZoomControl position=\"bottomright\"/>\n            <Download param={props.graphic?.map_id} p={'13.5'}/>\n          </MapContainer>\n    )\n  }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}