{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/f4ustx/cnpq/Portal_Geoeste/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import styled from\"styled-components\";export var CheckMark=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n.checkmark {\\n  position: absolute;\\n  top: \",\";\\n  left:  \",\";\\n  height: 20px;\\n  width: 20px;\\n  background-color: #eee;\\n  \\nborder-radius: 15px;\\n}\\n\\n:hover input ~ .checkmark {\\n  background-color: #ccc;\\n}\\n\\n/* When the checkbox is checked, add a blue background */\\ninput:checked ~ .checkmark {\\n  background-color: #2196F3;\\n}\\n\\n/* Create the checkmark/indicator (hidden when not checked) */\\n.checkmark:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  display: none;\\n}\\n\\n/* Show the checkmark when checked */\\ninput:checked ~ .checkmark:after {\\n  display: block;\\n}\\n\\n/* Style the checkmark/indicator */\\n.checkmark:after {\\n  left: 7.5px;\\n  top: 3px;\\n  width: 5px;\\n  height: 10px;\\n  border: solid white;\\n  border-width: 0 1px 1px 0;\\n  -webkit-transform: rotate(45deg);\\n  -ms-transform: rotate(45deg);\\n  transform: rotate(45deg);\\n}\\n\"])),function(props){return props.top;},function(props){return props.left;});export var Form=styled.form(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n\\na {\\n  text-decoration: none;\\n}\\n\\nlabel {\\n  color: rgb(8, 165, 238);\\n  font-size: 14px;\\n  float: revert;\\n  text-align: center;\\n  display: block;\\n\\n}\\n\\n.common:hover {\\n  color: rgb(3, 72, 151);\\n}\\n\\n.checking{\\n  position: absolute;\\n  cursor: pointer;\\n  height: 0;\\n  width: 0;\\n}\\n\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: sans-serif;\\n  background-color: white;\\n}\\n  width: 300px;\\n  padding: 40px;\\n  position: absolute;\\n  top: 85%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  background: none;\\n  border: 1px solid rgb(8, 165, 238);\\n  border: \",\";\\n  text-align: center;\\n\\n input[type=\\\"text\\\"],\\n\\n input[type=\\\"password\\\"] {\\n  border: 0;\\n  background: none;\\n  display: block;\\n  margin: 20px auto;\\n  text-align: center;\\n  border: 1px solid rgb(8, 165, 238);\\n  padding: 14px 10px;\\n  width: 200px;\\n  outline: none;\\n  color: rgb(3, 72, 151);\\n  border-radius: 24px;\\n  transition: 0.25s;\\n}\\n input[type=\\\"text\\\"]:focus,\\n input[type=\\\"password\\\"]:focus {\\n  width: 280px;\\n  border-color: rgb(8, 165, 238);\\n}\\n\\n  input[type=\\\"file\\\"] {\\n    display: none;\\n  }\\n  .custom-file-upload {\\n    border: 0;\\n    font-size: 12px;\\n    background-color: rgb(8, 165, 238);\\n    display: block;\\n    margin: 10px auto;\\n    text-align: center;\\n    border: 1px solid rgb(8, 165, 238);\\n    padding: 12px 8px;\\n    width: 300px;\\n    outline: none;\\n    color: white;\\n    border-radius: 22px;\\n    transition: 0.25s;\\n    cursor: pointer;\\n  }\\n\\n  .custom-file-upload:hover {\\n    background: rgb(4, 107, 224);\\n  }\\n\\n  button[type=\\\"button\\\"] {\\n  border: 0;\\n  background-color: rgb(8, 165, 238);\\n  display: block;\\n  margin: 10px auto;\\n  text-align: center;\\n  text-decoration: none;\\n  border: 1px solid rgb(8, 165, 238);\\n  padding: 12px 8px;\\n  width: 100px;\\n  outline: none;\\n  color: white;\\n  border-radius: 22px;\\n  transition: 0.25s;\\n  cursor: pointer;\\n}\\n  button[type=\\\"button\\\"]:hover {\\n  background: rgb(4, 107, 224);\\n}\\n\\n\"])),function(props){return props.border;});export var Form1=styled.form(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\na {\\n  text-decoration: none;\\n}\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  font-family: sans-serif;\\n}\\n  width: 300px;\\n  padding: 40px;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  background: none;\\n  text-align: center;\\n\\n  button[type=\\\"button\\\"] {\\n  border: 0;\\n  background-color: rgb(8, 165, 238);\\n  display: block;\\n  margin: 10px auto;\\n  text-align: center;\\n  text-decoration: none;\\n  border: 1px solid rgb(8, 165, 238);\\n  padding: 12px 8px;\\n  width: 100px;\\n  outline: none;\\n  color: white;\\n  border-radius: 22px;\\n  transition: 0.25s;\\n  cursor: pointer;\\n}\\nbutton[type=\\\"button\\\"]:hover {\\n  background: rgb(4, 107, 224);\\n}\\n\"])));","map":{"version":3,"names":["styled","CheckMark","div","props","top","left","Form","form","border","Form1"],"sources":["/home/f4ustx/cnpq/Portal_Geoeste/client/src/components/Forms/AuthForms/style.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport type spanProps = {\n  top: string;\n  left: string;\n\n}\n\nexport type boxBorderProps = {\n  border?: string;\n}\n\nexport const CheckMark = styled.div<spanProps>`\n.checkmark {\n  position: absolute;\n  top: ${props=>props.top};\n  left:  ${props=>props.left};\n  height: 20px;\n  width: 20px;\n  background-color: #eee;\n  \nborder-radius: 15px;\n}\n\n:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n\n/* When the checkbox is checked, add a blue background */\ninput:checked ~ .checkmark {\n  background-color: #2196F3;\n}\n\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n/* Show the checkmark when checked */\ninput:checked ~ .checkmark:after {\n  display: block;\n}\n\n/* Style the checkmark/indicator */\n.checkmark:after {\n  left: 7.5px;\n  top: 3px;\n  width: 5px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 1px 1px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n`\n\nexport const Form = styled.form<boxBorderProps>`\n\na {\n  text-decoration: none;\n}\n\nlabel {\n  color: rgb(8, 165, 238);\n  font-size: 14px;\n  float: revert;\n  text-align: center;\n  display: block;\n\n}\n\n.common:hover {\n  color: rgb(3, 72, 151);\n}\n\n.checking{\n  position: absolute;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n  background-color: white;\n}\n  width: 300px;\n  padding: 40px;\n  position: absolute;\n  top: 85%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: none;\n  border: 1px solid rgb(8, 165, 238);\n  border: ${props=>props.border};\n  text-align: center;\n\n input[type=\"text\"],\n\n input[type=\"password\"] {\n  border: 0;\n  background: none;\n  display: block;\n  margin: 20px auto;\n  text-align: center;\n  border: 1px solid rgb(8, 165, 238);\n  padding: 14px 10px;\n  width: 200px;\n  outline: none;\n  color: rgb(3, 72, 151);\n  border-radius: 24px;\n  transition: 0.25s;\n}\n input[type=\"text\"]:focus,\n input[type=\"password\"]:focus {\n  width: 280px;\n  border-color: rgb(8, 165, 238);\n}\n\n  input[type=\"file\"] {\n    display: none;\n  }\n  .custom-file-upload {\n    border: 0;\n    font-size: 12px;\n    background-color: rgb(8, 165, 238);\n    display: block;\n    margin: 10px auto;\n    text-align: center;\n    border: 1px solid rgb(8, 165, 238);\n    padding: 12px 8px;\n    width: 300px;\n    outline: none;\n    color: white;\n    border-radius: 22px;\n    transition: 0.25s;\n    cursor: pointer;\n  }\n\n  .custom-file-upload:hover {\n    background: rgb(4, 107, 224);\n  }\n\n  button[type=\"button\"] {\n  border: 0;\n  background-color: rgb(8, 165, 238);\n  display: block;\n  margin: 10px auto;\n  text-align: center;\n  text-decoration: none;\n  border: 1px solid rgb(8, 165, 238);\n  padding: 12px 8px;\n  width: 100px;\n  outline: none;\n  color: white;\n  border-radius: 22px;\n  transition: 0.25s;\n  cursor: pointer;\n}\n  button[type=\"button\"]:hover {\n  background: rgb(4, 107, 224);\n}\n\n`\nexport const Form1 = styled.form`\na {\n  text-decoration: none;\n}\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif;\n}\n  width: 300px;\n  padding: 40px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: none;\n  text-align: center;\n\n  button[type=\"button\"] {\n  border: 0;\n  background-color: rgb(8, 165, 238);\n  display: block;\n  margin: 10px auto;\n  text-align: center;\n  text-decoration: none;\n  border: 1px solid rgb(8, 165, 238);\n  padding: 12px 8px;\n  width: 100px;\n  outline: none;\n  color: white;\n  border-radius: 22px;\n  transition: 0.25s;\n  cursor: pointer;\n}\nbutton[type=\"button\"]:hover {\n  background: rgb(4, 107, 224);\n}\n`\n"],"mappings":"mMAAA,MAAOA,OAAP,KAAmB,mBAAnB,CAYA,MAAO,IAAMC,UAAS,CAAGD,MAAM,CAACE,GAAV,i6BAGb,SAAAC,KAAK,QAAEA,MAAK,CAACC,GAAR,EAHQ,CAIX,SAAAD,KAAK,QAAEA,MAAK,CAACE,IAAR,EAJM,CAAf,CA+CP,MAAO,IAAMC,KAAI,CAAGN,MAAM,CAACO,IAAV,8gEAwCL,SAAAJ,KAAK,QAAEA,MAAK,CAACK,MAAR,EAxCA,CAAV,CA8GP,MAAO,IAAMC,MAAK,CAAGT,MAAM,CAACO,IAAV,0vBAAX"},"metadata":{},"sourceType":"module"}